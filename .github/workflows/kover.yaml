# This file was generated using Kotlin DSL (.github/workflows/kover.main.kts).
# If you want to modify the workflow, please change the Kotlin file and regenerate this YAML file.
# Generated with https://github.com/typesafegithub/github-workflows-kt

name: 'Kover Coverage'
on:
  push:
    branches:
    - 'main'
jobs:
  check_yaml_consistency:
    name: 'Check YAML consistency'
    runs-on: 'ubuntu-latest'
    steps:
    - id: 'step-0'
      name: 'Check out'
      uses: 'actions/checkout@v5'
    - id: 'step-1'
      name: 'Execute script'
      run: 'rm ''.github/workflows/kover.yaml'' && ''.github/workflows/kover.main.kts'''
    - id: 'step-2'
      name: 'Consistency check'
      run: 'git diff --exit-code ''.github/workflows/kover.yaml'''
  kover-coverage:
    runs-on: 'ubuntu-latest'
    needs:
    - 'check_yaml_consistency'
    steps:
    - id: 'step-0'
      name: 'Setup JDK'
      uses: 'actions/setup-java@v5'
      with:
        java-version: '17'
        distribution: 'adopt'
    - id: 'step-1'
      name: 'Checkout'
      uses: 'actions/checkout@v5'
    - id: 'step-2'
      name: 'Setup Gradle'
      uses: 'gradle/actions/setup-gradle@v4'
    - id: 'step-3'
      name: 'Generate Kover Reports'
      run: './gradlew koverHtmlReport koverXmlReport'
    - id: 'step-4'
      name: 'Upload Kover Reports'
      uses: 'actions/upload-artifact@v4'
      with:
        name: 'coverage-reports'
        path: 'app/build/reports/kover'
    - id: 'step-5'
      name: 'Calculate Coverage'
      run: |-
        COVERAGE=$(./gradlew -q printLineCoverage)
        echo "Raw Coverage: $COVERAGE"
        COVERAGE=$(printf "%.0f" "$COVERAGE")  # Round to integer
        echo "Rounded Coverage: $COVERAGE"
        echo "COVERAGE=$COVERAGE" >> $GITHUB_ENV
    - id: 'step-6'
      name: 'Update GitHub Summary'
      run: |-
        echo "## Code Coverage Report" >> $GITHUB_STEP_SUMMARY
        echo "**Total Coverage:** $COVERAGE%" >> $GITHUB_STEP_SUMMARY
    - id: 'step-7'
      name: 'Generate Coverage Badge'
      run: |-
        mkdir -p badge
        COLOR=$(
          if [ "$COVERAGE" -ge 90 ]; then
            echo "brightgreen"
          elif [ "$COVERAGE" -ge 70 ]; then
            echo "yellow"
          else
            echo "red"
          fi
        )
        URL="https://img.shields.io/badge/Coverage-$COVERAGE%25-$COLOR"
        curl -sS "$URL" -o badge/coverage-badge.svg
    - id: 'step-8'
      name: 'Deploy Badge to GitHub Pages'
      uses: 'peaceiris/actions-gh-pages@v4'
      with:
        github_token: '${{ secrets.GITHUB_TOKEN }}'
        publish_branch: 'gh-pages'
        publish_dir: 'badge'
        allow_empty_commit: 'false'
        force_orphan: 'true'
